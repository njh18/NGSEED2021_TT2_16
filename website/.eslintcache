[{"C:\\Users\\Zhen Wei\\Desktop\\TeckTrek2020\\NGSEED2021_TT2_16\\website\\src\\index.js":"1","C:\\Users\\Zhen Wei\\Desktop\\TeckTrek2020\\NGSEED2021_TT2_16\\website\\src\\reportWebVitals.js":"2","C:\\Users\\Zhen Wei\\Desktop\\TeckTrek2020\\NGSEED2021_TT2_16\\website\\src\\App.js":"3","C:\\Users\\Zhen Wei\\Desktop\\TeckTrek2020\\NGSEED2021_TT2_16\\website\\src\\services\\auth.service.js":"4","C:\\Users\\Zhen Wei\\Desktop\\TeckTrek2020\\NGSEED2021_TT2_16\\website\\src\\components\\Register.js":"5","C:\\Users\\Zhen Wei\\Desktop\\TeckTrek2020\\NGSEED2021_TT2_16\\website\\src\\components\\Login.js":"6","C:\\Users\\Zhen Wei\\Desktop\\TeckTrek2020\\NGSEED2021_TT2_16\\website\\src\\components\\Home.js":"7","C:\\Users\\Zhen Wei\\Desktop\\TeckTrek2020\\NGSEED2021_TT2_16\\website\\src\\components\\Profile.js":"8","C:\\Users\\Zhen Wei\\Desktop\\TeckTrek2020\\NGSEED2021_TT2_16\\website\\src\\components\\BoardUser.js":"9","C:\\Users\\Zhen Wei\\Desktop\\TeckTrek2020\\NGSEED2021_TT2_16\\website\\src\\services\\user.service.js":"10","C:\\Users\\Zhen Wei\\Desktop\\TeckTrek2020\\NGSEED2021_TT2_16\\website\\src\\services\\auth-header.js":"11"},{"size":562,"mtime":1607660738327,"results":"12","hashOfConfig":"13"},{"size":375,"mtime":1607660738328,"results":"14","hashOfConfig":"13"},{"size":3068,"mtime":1607660738318,"results":"15","hashOfConfig":"13"},{"size":852,"mtime":1607660738331,"results":"16","hashOfConfig":"13"},{"size":4820,"mtime":1607660738325,"results":"17","hashOfConfig":"13"},{"size":3533,"mtime":1607660738322,"results":"18","hashOfConfig":"13"},{"size":707,"mtime":1607660738321,"results":"19","hashOfConfig":"13"},{"size":906,"mtime":1607660738323,"results":"20","hashOfConfig":"13"},{"size":770,"mtime":1607660738320,"results":"21","hashOfConfig":"13"},{"size":656,"mtime":1607660738332,"results":"22","hashOfConfig":"13"},{"size":296,"mtime":1607660738329,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1ute2ae",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},"C:\\Users\\Zhen Wei\\Desktop\\TeckTrek2020\\NGSEED2021_TT2_16\\website\\src\\index.js",[],["52","53"],"C:\\Users\\Zhen Wei\\Desktop\\TeckTrek2020\\NGSEED2021_TT2_16\\website\\src\\reportWebVitals.js",[],"C:\\Users\\Zhen Wei\\Desktop\\TeckTrek2020\\NGSEED2021_TT2_16\\website\\src\\App.js",["54","55"],"import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport AuthService from \"./services/auth.service\";\r\n\r\nimport Login from \"./components/Login\";\r\nimport Register from \"./components/Register\";\r\nimport Home from \"./components/Home\";\r\nimport Profile from \"./components/Profile\";\r\nimport BoardUser from \"./components/BoardUser\";\r\n\r\nconst App = () => {\r\n  const [currentUser, setCurrentUser] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      setCurrentUser(user);\r\n    }\r\n  }, []);\r\n\r\n  const logOut = () => {\r\n    AuthService.logout();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand navbar-light bg-light shadow p-3 mb-5 bg-white rounded\">\r\n        <Link to={\"/\"} className=\"navbar-brand\">\r\n          <img\r\n            src=\"https://www.dbs.com.sg/iwov-resources/flp/images/dbs_logo.svg\"\r\n            style={{\r\n              height: \"auto\",\r\n              width: \"auto\",\r\n              maxHeight: \"50px\",\r\n            }}\r\n          />\r\n        </Link>\r\n        <div className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link to={\"/home\"} className=\"nav-link\">\r\n              Home\r\n            </Link>\r\n          </li>\r\n\r\n          {currentUser && (\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/user\"} className=\"nav-link\">\r\n                Account Details\r\n              </Link>\r\n            </li>\r\n          )}\r\n        </div>\r\n\r\n        {currentUser ? (\r\n          <div className=\"navbar-nav ml-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/profile\"} className=\"nav-link\">\r\n                {currentUser.username}\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a href=\"/\" className=\"nav-link\" onClick={logOut}>\r\n                LogOut\r\n              </a>\r\n            </li>\r\n          </div>\r\n        ) : (\r\n          <div className=\"navbar-nav ml-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/\"} className=\"nav-link\">\r\n                Login\r\n              </Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/register\"} className=\"nav-link\">\r\n                Sign Up\r\n              </Link>\r\n            </li>\r\n          </div>\r\n        )}\r\n      </nav>\r\n\r\n      <div className=\"container mt-3\">\r\n        <Switch>\r\n          <Route exact path={[\"/home\"]} component={Home} />\r\n          <Route exact path=\"/\" component={Login} />\r\n          <Route exact path=\"/register\" component={Register} />\r\n          <Route exact path=\"/profile\" component={Profile} />\r\n          <Route path=\"/user\" component={BoardUser} />\r\n          {/* <Route path=\"/mod\" component={BoardModerator} />\r\n          <Route path=\"/admin\" component={BoardAdmin} /> */}\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\Zhen Wei\\Desktop\\TeckTrek2020\\NGSEED2021_TT2_16\\website\\src\\services\\auth.service.js",["56"],"// Authentication Service\r\nimport axios from \"axios\";\r\n\r\n// Getting the API_URL and input in\r\nconst API_URL = \"http://localhost:3000/api/auth/\";\r\n\r\nconst register = (username, email, password) => {\r\n  return axios.post(API_URL + \"signup\", {\r\n    username,\r\n    email,\r\n    password,\r\n  });\r\n};\r\n\r\nconst login = (username, password) => {\r\n  return axios\r\n    .post(API_URL + \"signin\", {\r\n      username,\r\n      password,\r\n    })\r\n    .then((response) => {\r\n      if (response.data.accessToken) {\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n      }\r\n\r\n      return response.data;\r\n    });\r\n};\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem(\"user\");\r\n};\r\n\r\nconst getCurrentUser = () => {\r\n  return JSON.parse(localStorage.getItem(\"user\"));\r\n};\r\n\r\nexport default {\r\n  register,\r\n  login,\r\n  logout,\r\n  getCurrentUser,\r\n};\r\n","C:\\Users\\Zhen Wei\\Desktop\\TeckTrek2020\\NGSEED2021_TT2_16\\website\\src\\components\\Register.js",[],"C:\\Users\\Zhen Wei\\Desktop\\TeckTrek2020\\NGSEED2021_TT2_16\\website\\src\\components\\Login.js",["57"],"import React, { useState, useRef } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nimport { isEmail } from \"validator\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst Login = (props) => {\r\n  const form = useRef();\r\n  const checkBtn = useRef();\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const onChangeUsername = (e) => {\r\n    const username = e.target.value;\r\n    setUsername(username);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    const password = e.target.value;\r\n    setPassword(password);\r\n  };\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    setMessage(\"\");\r\n    setLoading(true);\r\n\r\n    form.current.validateAll();\r\n\r\n    if (checkBtn.current.context._errors.length === 0) {\r\n      AuthService.login(username, password).then(\r\n        () => {\r\n          props.history.push(\"/profile\");\r\n          window.location.reload();\r\n        },\r\n        (error) => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          setLoading(false);\r\n          setMessage(resMessage);\r\n        }\r\n      );\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-md-12\">\r\n      <div className=\"card card-container\">\r\n        <img\r\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n          alt=\"profile-img\"\r\n          className=\"profile-img-card\"\r\n        />\r\n\r\n        <Form onSubmit={handleLogin} ref={form}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"username\">Username</label>\r\n            <Input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"username\"\r\n              value={username}\r\n              onChange={onChangeUsername}\r\n              validations={[required]}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <Input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={onChangePassword}\r\n              validations={[required]}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <button\r\n              className=\"btn btn-primary btn-block\"\r\n              disabled={loading}\r\n              style={{ backgroundColor: \"#f33\" }}\r\n            >\r\n              {loading && (\r\n                <span className=\"spinner-border spinner-border-sm\"></span>\r\n              )}\r\n              <span>Login</span>\r\n            </button>\r\n          </div>\r\n\r\n          {message && (\r\n            <div className=\"form-group\">\r\n              <div className=\"alert alert-danger\" role=\"alert\">\r\n                {message}\r\n              </div>\r\n            </div>\r\n          )}\r\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Zhen Wei\\Desktop\\TeckTrek2020\\NGSEED2021_TT2_16\\website\\src\\components\\Home.js",[],"C:\\Users\\Zhen Wei\\Desktop\\TeckTrek2020\\NGSEED2021_TT2_16\\website\\src\\components\\Profile.js",[],"C:\\Users\\Zhen Wei\\Desktop\\TeckTrek2020\\NGSEED2021_TT2_16\\website\\src\\components\\BoardUser.js",[],"C:\\Users\\Zhen Wei\\Desktop\\TeckTrek2020\\NGSEED2021_TT2_16\\website\\src\\services\\user.service.js",["58"],"// Data Service\r\n// Used to access data\r\nimport axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\n\r\nconst API_URL = \"http://localhost:8080/api/test/\";\r\n\r\nconst getPublicContent = () => {\r\n  return axios.get(API_URL + \"all\");\r\n};\r\n\r\nconst getUserBoard = () => {\r\n  return axios.get(API_URL + \"user\", { headers: authHeader() });\r\n};\r\n\r\nconst getModeratorBoard = () => {\r\n  return axios.get(API_URL + \"mod\", { headers: authHeader() });\r\n};\r\n\r\nconst getAdminBoard = () => {\r\n  return axios.get(API_URL + \"admin\", { headers: authHeader() });\r\n};\r\n\r\nexport default {\r\n  getPublicContent,\r\n  getUserBoard,\r\n  getModeratorBoard,\r\n  getAdminBoard,\r\n};\r\n","C:\\Users\\Zhen Wei\\Desktop\\TeckTrek2020\\NGSEED2021_TT2_16\\website\\src\\services\\auth-header.js",["59","60"],"import React, { Component } from \"react\";\r\n\r\nconst authHeader = () => {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n  if (user && user.accessToken) {\r\n    return { Authorization: \"Bearer \" + user.accessToken };\r\n  } else {\r\n    return {};\r\n  }\r\n};\r\n\r\nexport default authHeader;\r\n",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":1,"column":8,"nodeType":"67","messageId":"68","endLine":1,"endColumn":12},{"ruleId":"69","severity":1,"message":"70","line":33,"column":11,"nodeType":"71","endLine":40,"endColumn":13},{"ruleId":"72","severity":1,"message":"73","line":38,"column":1,"nodeType":"74","endLine":43,"endColumn":3},{"ruleId":"65","severity":1,"message":"75","line":7,"column":10,"nodeType":"67","messageId":"68","endLine":7,"endColumn":17},{"ruleId":"72","severity":1,"message":"73","line":24,"column":1,"nodeType":"74","endLine":29,"endColumn":3},{"ruleId":"65","severity":1,"message":"76","line":1,"column":8,"nodeType":"67","messageId":"68","endLine":1,"endColumn":13},{"ruleId":"65","severity":1,"message":"77","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":26},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'isEmail' is defined but never used.","'React' is defined but never used.","'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]